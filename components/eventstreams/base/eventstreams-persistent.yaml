apiVersion: eventstreams.ibm.com/v1beta2
kind: EventStreams
metadata:
  name: eventstreams
spec:
  security:
    internalTls: TLSv1.3
  license:
    accept: true
    use: EventAutomationNonProduction
    license: L-HRZF-DWHH7A
  requestIbmServices:
    iam: false
    monitoring: false
  strimziOverrides:
    entityOperator:
      topicOperator: {}
    kafka:
      authorization:
        type: simple
      config:
        auto.create.topics.enable: false
        inter.broker.protocol.version: '3.3'
        offsets.topic.replication.factor: 1
        transaction.state.log.min.isr: 1
        transaction.state.log.replication.factor: 1
      metricsConfig:
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: eventstreams-metrics-config
        type: jmxPrometheusExporter
      storage:
        type: persistent-claim
        class: PATCHED_BY_KUSTOMIZE
        size: 10Gi
      listeners:
        #- name: plain
        #  port: 9093
        #  type: internal
        #  tls: false
        #  authentication:
        #    type: scram-sha-512
        - name: external
          type: route
          port: 9092
          authentication:
            type: scram-sha-512
          tls: true
      replicas: 1
    zookeeper:
      metricsConfig:
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: eventstreams-metrics-config
        type: jmxPrometheusExporter
      storage:
        type: persistent-claim
        class: PATCHED_BY_KUSTOMIZE
        size: 10Gi
      replicas: 1
  adminUI: 
    authentication:
      - type: scram-sha-512
  restProducer: {}
  apicurioRegistry: {}
  adminApi: {}
  collector: {}
  version: latest
